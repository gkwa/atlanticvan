name: Build & Test
"on":
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: 01 13 * * SAT
jobs:
  ubuntu:
    name: Build & Test (ubuntu-latest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@cbb722410c2e876e24abbe8de2cc27693e501dcb
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          ref: ${{ github.head_ref || github.ref_name }}
      - name: Fetch all tags
        run: |
          git fetch --unshallow --tags
          git pull origin master
      - uses: actions/setup-node@48b90677b6048efbc723b11a94acb950d3f1ac36
        with:
          node-version: lts/*
      - name: Install Linux Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --assume-yes git
          sudo apt-get install --assume-yes xvfb libglib2.0-0 libnss3 libnspr4 libatk1.0-0 libatk-bridge2.0-0 libcups2 libdrm2 libdbus-1-3 libxkbcommon0 libxcomposite1 libxdamage1 libxfixes3 libxrandr2 libgbm1 libpango-1.0-0 libcairo2 libasound2 libatspi2.0-0
      - name: Configure Git
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
      - name: Scaffold a new playwright project
        run: bash -xe playwright_init.sh
      - name: Install prettier
        run: pnpm install prettier
      - run: pnpm prettier --ignore-path=.prettierignore --config=.prettierrc.json --write .
      - uses: EndBug/add-and-commit@8c5cdcb4e6b4ae2c76cde807552634e4485b17bf
        with:
          add: .
          message: "chore: lint files [skip ci]"
          default_author: github_actions
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
  macos:
    needs: ubuntu
    name: Build & Test (macOS-latest)
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@cbb722410c2e876e24abbe8de2cc27693e501dcb
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          ref: ${{ github.head_ref || github.ref_name }}
      - name: Fetch all tags
        run: |
          git fetch --unshallow --tags
          git pull origin master
      - uses: actions/setup-node@48b90677b6048efbc723b11a94acb950d3f1ac36
        with:
          node-version: lts/*
      - name: Configure Git
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
      - name: Scaffold a new playwright project
        run: bash -xe playwright_init.sh
      - name: Install prettier
        run: pnpm install prettier
      - run: pnpm prettier --ignore-path=.prettierignore --config=.prettierrc.json --write .
      - uses: EndBug/add-and-commit@8c5cdcb4e6b4ae2c76cde807552634e4485b17bf
        with:
          add: .
          message: "chore: lint files [skip ci]"
          default_author: github_actions
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
  windows:
    needs: macos
    name: Build & Test (windows-latest)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@cbb722410c2e876e24abbe8de2cc27693e501dcb
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          ref: ${{ github.head_ref || github.ref_name }}
      - name: Fetch all tags
        run: |
          git fetch --unshallow --tags
          git pull origin master
      - uses: actions/setup-node@48b90677b6048efbc723b11a94acb950d3f1ac36
        with:
          node-version: lts/*
      - name: Configure Git
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
      - name: Scaffold a new playwright project
        run: bash -xe playwright_init.sh
      - name: Install prettier
        run: pnpm install prettier
      - run: pnpm prettier --ignore-path=.prettierignore --config=.prettierrc.json --write .
      - uses: EndBug/add-and-commit@8c5cdcb4e6b4ae2c76cde807552634e4485b17bf
        with:
          add: .
          message: "chore: lint files [skip ci]"
          default_author: github_actions
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
  required-check:
    name: All Tests Passed
    needs:
      - ubuntu
      - macos
      - windows
    runs-on: ubuntu-latest
    steps:
      - run: echo "All tests passed!"
